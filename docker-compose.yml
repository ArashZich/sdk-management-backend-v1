version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: ${COMPOSE_PROJECT_NAME:-makeup-sdk}-mongo
    restart: unless-stopped
    ports:
      - "27020:27017"  # پورت خارجی 27020 به پورت داخلی 27017
    volumes:
      - mongo_data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: ${COMPOSE_PROJECT_NAME:-makeup-sdk}-mongo-express
    restart: unless-stopped
    ports:
      - "8085:8081"  # پورت خارجی 8085 به پورت داخلی 8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASS:-pass}
    depends_on:
      - mongo
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-makeup-sdk}-redis
    restart: unless-stopped
    command: redis-server --protected-mode no  # حذف رمز عبور
    ports:
      - "6380:6379"  # پورت خارجی 6380 به پورت داخلی 6379
    volumes:
      - redis_data:/data
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-makeup-sdk}-api
    restart: unless-stopped
    ports:
      - "5000:${PORT:-4000}"  # پورت خارجی 5000 به پورت داخلی که در ENV تعریف شده
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    command: >
      sh -c "npm run seed && npm start"

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
  redis_data: